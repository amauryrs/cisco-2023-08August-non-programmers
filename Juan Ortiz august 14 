{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5f59127d-c48e-492f-9575-dd4ccae895d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n"
     ]
    }
   ],
   "source": [
    "print('Hello"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f138a455-ac8b-4fed-bba7-44678b4e2c61",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Morning,juan!\n"
     ]
    }
   ],
   "source": [
    "name = \"juan\" \n",
    "print(\"Morning,\" + name + \"!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "517c53f8-9662-476c-83ab-8747e60c3a29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your name: juan ortiz \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello, juan ortiz !\n"
     ]
    }
   ],
   "source": [
    "name  = input('enter your name:')\n",
    "print('hello, ' + name + '!') \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "1e4f3ca0-ab66-4eef-8d0d-63d210a8c065",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "expected ':' (3009443549.py, line 4)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[40], line 4\u001b[0;36m\u001b[0m\n\u001b[0;31m    else\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m expected ':'\n"
     ]
    }
   ],
   "source": [
    "name = input('enter your name: ')\n",
    "if name == 'juan':\n",
    "    print ('what are you doing here?')\n",
    "else \n",
    "    print ('hello ' + name + '.') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "bcff7cc6-0458-4754-81d7-c3c7cfa84bc5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your name:  juan\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Who the heck are you?\n",
      "I do not know anyone named juan!\n"
     ]
    }
   ],
   "source": [
    "name = input('Enter your name: ')\n",
    "\n",
    "if name == 'Reuven':\n",
    "    print('Hi again!')\n",
    "    print('I never tire of seeing your lovely name')\n",
    "else:\n",
    "    print('Who the heck are you?')\n",
    "    print('I do not know anyone named ' + name + '!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "61fbcc64-a435-49bb-bc69-c1fb671d8ca8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Generated number: 31\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Guess the number (between 0 and 100):  2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Too low!\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "# Generate a random number from 0 to 100\n",
    "number = random.randint(0, 100)\n",
    "\n",
    "# Print the generated number\n",
    "print(\"Generated number:\", number)\n",
    "\n",
    "# Ask the user to guess the number\n",
    "user_guess = int(input(\"Guess the number (between 0 and 100): \"))\n",
    "\n",
    "# Compare the user's guess with the generated number\n",
    "if user_guess == number:\n",
    "    print(\"You got it!\")\n",
    "elif user_guess > number:\n",
    "    print(\"Too high!\")\n",
    "else:\n",
    "    print(\"Too low!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "29f6fdef-f3c1-441a-bb2f-d3ba8010d61c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "generated number: 53\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Guess the number (between 0 and 100):  10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Too low!\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "number = random.randint(0, 100)\n",
    "\n",
    "print(\"generated number:\", number)\n",
    "user_guess = int(input(\"Guess the number (between 0 and 100): \"))\n",
    "\n",
    "if user_guess == number:\n",
    "   print(\"you got it\")\n",
    "elif user_guess > number:\n",
    "    print(\"Too high!\")\n",
    "else:\n",
    "    print(\"Too low!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "caa7c589-3b87-4c26-9da1-9d6f5ace4ea9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get input from the user\n",
    "english_word = input(\"Enter a word in English: \").lower()\n",
    "\n",
    "# Check if the first letter is a vowel\n",
    "if word[0] in ['a', 'e', 'i', 'o', 'u']:\n",
    "    pig_latin_translation = english_word + \"way\"\n",
    "else:\n",
    "    pig_latin_translation = word[1:] + english_word[0] + \"ay\"\n",
    "\n",
    "# Print the Pig Latin translation\n",
    "print(\"Pig Latin translation:\", pig_latin_translation)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81b1e163-e2f4-4e4f-a075-81a9f752575b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
